#!/usr/bin/env bash
TARGET=$1
TIMEOUT=${2:-2}
RECHECKS=${3:-3}
HOST="$(basename "${TARGET}")"
RUNDIR="${XDG_RUNTIME_DIR}/gemini-healthchecker/${HOST}"

set -euo pipefail

_usage()        { echo "Usage: $(basename "$0") TARGET [TIMEOUT] [RECHECKS]"; }
_is_up()        { [[ $(tail -n1 "${RUNDIR}/state") -eq 20 ]]; }
_is_down()      { ! _is_up; }
_was_up()       { [[ $(tail -n1 "${RUNDIR}/last_state") -eq 20 ]]; }
_was_down()     { ! _was_up; }
_last_success() { stat -c %Y "${RUNDIR}/last_success"; }
_print_date()   { date -u --iso-8601=seconds --date="${1:-now}"; }
_test_target()  { _gemini_status_code >> "${RUNDIR}/state"; }

_gemini_status_code() {
  echo -e "${TARGET}/\\r\\n" \
    | timeout "${TIMEOUT}" openssl s_client -connect "${HOST}:1965" -ign_eof -quiet 2>/dev/null \
    | awk '(NR==1) {print $1; exit 0}' \
    || echo 0
}

[[ $# -eq 0 ]] && _usage && exit 1
[[ $# -gt 3 ]] && _usage && exit 1
[[ "$*" =~ --help ]] && _usage && exit 0

mkdir -p "${RUNDIR}"
if [[ -f "${RUNDIR}/state" ]]; then
  mv "${RUNDIR}/state" "${RUNDIR}/last_state"
else
  echo 20 > "${RUNDIR}/last_state"  # assume it's ok
fi
touch "${RUNDIR}/state"

for ((i=1;i<RECHECKS;i++)); do
  _test_target
  _is_up && break
done

_is_up && touch "${RUNDIR}/last_success"

if _is_up && _was_down; then
  echo "${TARGET} has recovered since failing at $(_print_date "@$(_last_success)")"
elif _is_down && _was_up; then
  echo "${TARGET} has entered an alarm state at $(_print_date)"
fi
