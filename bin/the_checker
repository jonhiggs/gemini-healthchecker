#!/usr/bin/env bash
set -euo pipefail

TARGET=$1
TIMEOUT=2
RECHECKS=5
HOST="$(basename "${TARGET}")"
RUNDIR="${XDG_RUNTIME_DIR}/gemini-healthchecker/${HOSTNAME}"

_is_up()        { [[ $(tail -n1 "${RUNDIR}/state") -eq 20 ]]; }
_is_down()      { ! _is_up; }
_was_up()       { [[ $(tail -n1 "${RUNDIR}/last_state") -eq 20 ]]; }
_was_down()     { ! _was_up; }
_write_state()  { echo "$1" >> "${RUNDIR}/state"; }
_last_success() { stat -c %Y "${RUNDIR}/last_success"; }
_print_date()   { date -u --iso-8601=seconds --date="@$1"; }

_test_target() {
  echo -e "${TARGET}/\r\n" \
    | timeout ${TIMEOUT} openssl s_client -connect ${HOST}:1965 -ign_eof -quiet 2>/dev/null \
    | awk '(NR==1) { print $1 }'
}

mkdir -p "${RUNDIR}"
if [[ -f "${RUNDIR}/state" ]]; then
  mv "${RUNDIR}/state" "${RUNDIR}/last_state"
else
  echo 20 > "${RUNDIR}/last_state"  # assume it's ok
fi

for ((i=1;i<RECHECKS;i++)); do
  _test_target
  _is_up && break
done

_is_up && touch "${RUNDIR}/last_success"

if _is_up && _was_down; then
  echo "recovered since failing at $(_print_date "$(_last_success)")"
elif _is_down && _was_up; then
  echo failed
fi
